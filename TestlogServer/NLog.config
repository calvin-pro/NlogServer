<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log" >


  <!-- optional, add some variabeles
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>

  <!-- 
  See https://github.com/nlog/nlog/wiki/Configuration-file 
  for information on customizing logging rules and outputs.
   -->
  <targets async="true" >
<!--是否开启异步-->
    <!-- 
    add your targets here 
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Write events to a file with the date in the filename. 
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->

    <!--屏幕打印消息-->
    <target name="console" xsi:type="ColoredConsole"
                    layout="${date:format=HH\:mm\:ss}> ${message}"/>

    <!--VS输出窗口-->
    <target name="debugger" xsi:type="File"
                    fileName="${basedir}/Logs/debugger/${date:format=yyyy-MM}/debugger.txt"
                    layout="${date:format=HH\:mm\:ss} | ${level} | ${message}" />

    <!--保存至文件-->
    <target name="error_file" xsi:type="File" maxArchiveFiles="30"
                    fileName="${basedir}/Logs/Error/${date:format=yyyy-MM}/error.txt"
                    layout="${level} | ${message} ${onexception:${exception:format=tostring} ${newline} ${stacktrace} ${newline}" />

    <!--保存至文件-->
    <target name="Info_file" xsi:type="File" maxArchiveFiles="30"
                    fileName="${basedir}/Logs/Info/${date:format=yyyy-MM}/Info.txt"
                    layout=" ${level} | ${message} ${onexception:${exception:format=tostring} ${newline} ${stacktrace} ${newline}" />

    <!--保存至文件-->
    <target name="Trace_file" xsi:type="File" maxArchiveFiles="30"
                    fileName="${basedir}/Logs/Trace/${date:format=yyyy-MM}/Trace.txt"
                    layout=" ${level} | ${message} ${onexception:${exception:format=tostring} ${newline} ${stacktrace} ${newline}" />

  </targets>

  <rules>
    <!-- add your logging rules here -->

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
    <!--<logger name="*" writeTo="console" />-->


    <logger name='con' level='Debug' final='false' />
    <!--是否启动debug输出,如果不允许则设置成true-->
    <logger name="*" level="Debug" writeTo="debugger" />
    <logger name="*" level="Error" writeTo="error_file" />

    <logger name="*" level="Trace" writeTo="Trace_file" />
    <logger name='con' level='Info' final='false' />
    <logger name="*" level="Info" writeTo="Info_file"/>
  </rules>
</nlog>


<!--Trace - 最常见的记录信息，一般用于普通输出
Debug - 同样是记录信息，不过出现的频率要比Trace少一些，一般用来调试程序
Info - 信息类型的消息
Warn - 警告信息，一般用于比较重要的场合
Error - 错误信息
Fatal - 致命异常信息。一般来讲，发生致命异常之后程序将无法继续执行。-->